#!/bin/bash -e
# File              : django-hobot
# Author            : min.du <min.du@horizon.ai>
# Date              : 10.05.2019
# Last Modified Date: 10.05.2019
# Last Modified By  : min.du <min.du@horizon.ai>

function usage() {
    echo "usage:"
    echo "django-hobot [project_name]"
    exit 1
}

if [ ! -n "$1" ];then
    usage
fi

project=`pwd`/$1
echo "project root: $project"

SED=sed
if hash gsed 2>/dev/null;then
    SED=gsed
fi


function create_virtualenv() {
    virtualenv -p python3 $project/venv
    source $project/venv/bin/activate
    pip install django 
}


function install_nodejs() {
    version=6.14.3
    export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node
    git clone https://github.com/creationix/nvm.git ~/.nvm
    source ~/.nvm/nvm.sh
    nvm install $version
    nvm_install_latest_npm
    npm config set registry https://registry.npm.taobao.org
    npm config get registry
    
    shrc=$HOME/.bashrc
    if [ -f $HOME/.zshrc  ];then
            shrc=$HOME/.zshrc
    fi
    echo "source ~/.nvm/nvm.sh" >> $shrc
}

function check_hobot_react() {
    if hash node 2>/dev/null;then
        echo "Find node : `which node`"
    else
        echo 'node not found, please install node first.'
        read -p "Install node? [y/n]" answer
        if [[ $answer = "n" ]]; then
            exit
        fi
        install_nodejs
    fi
    npm i git+ssh://git@gitlab.hobot.cc:fe/create-hobot-app.git\#master -g

    if hash webpack 2>/dev/null;then
        echo "Find webpack : `which pack`"
    else
        npm i webpack-cli --global
    fi
}

function create_build() {
    echo "#!/bin/bash -e
    cd frontend
    npm run build
    cd ../backend
    rm -rf build 
    cp -r ../frontend/build  .
    python manage.py collectstatic" > $project/build
    chmod +x $project/build
}

function config_django() {
    # add ALLOW_HOSTS
    $SED -i -e "s/ALLOWED_HOSTS = \[.*\]/ALLOWED_HOSTS = ['0.0.0.0',]/g" $project/backend/backend/settings.py
    # add static path
    echo "STATIC_ROOT = os.path.join(BASE_DIR, 'static')" >> $project/backend/settings.py
    echo "STATICFILES_DIRS = (os.path.join(BASE_DIR, 'build/static'),)" >> $project/backend/backend/settings.py
}
function add_index_html() {
    # add index.html to django url.py
    $SED -e "17 a from django.urls import re_path" \
        -e "17 a from django.views.generic import TemplateView" \
        -e "20 a \ \ \ \ re_path('.*', TemplateView.as_view(template_name='index.html'))," \
        -i $project/backend/backend/urls.py
    # set TEMPLATE DIRS
    $SED -e "s/'DIRS': \[\],/'DIRS':\ ['build'],/g" \
        -i $project/backend/backend/settings.py
}

function create_git() {
    # create .gitignore
    echo "backend/build
    backend/static
    *.pyc
    __pycache__
    frontend/build
    frontend/node_modules
    *.swp
    *.swp
    venv
    " > $project/.gitignore
    
    echo "### $project" > $project/README.md
    git init
    git add .
    git commit -m 'init using django-hobot'
}


################
# init project #
################
if [ -d $project ];then
    read -p "$project already exists, override? [y/n]" answer
    if [[ $answer = "n" ]]; then
        exit
    fi
    rm -rf $project
fi
mkdir $project
cd $project

#####################
# python and django #
#####################
create_virtualenv 
django-admin.py startproject backend
cd $project/backend
python manage.py makemigrations
python manage.py migrate
#python manage.py createsuperuser 
echo "from django.contrib.auth.models import User; User.objects.create_superuser('admin', '', '123qweasd')" | python manage.py shell
config_django
echo "check django project and exit to continue to frontend"
python manage.py runserver 0.0.0.0:8000
add_index_html
cd $project

################
# hobot_react  #
################
check_hobot_react
create-hobot-app init frontend 
create_build
$project/build

cd $project/backend && python manage.py runserver 0.0.0.0:8000
cd $project

create_git
